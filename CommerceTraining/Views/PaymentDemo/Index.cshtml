@model CommerceTraining.Models.ViewModels.PaymentDemoViewModel

@{
    ViewBag.Title = "Index";
}


<h2>Payment Demo</h2>
<div class="container">
    <div class="row">
        <div class="col-4">
            @Model.Shirt.DisplayName
        </div>
        <div class="col-4">
            <img src="@Model.ImageUrl" />
        </div>
    </div>
</div>
@using (Html.BeginForm("UpdateCart", "PaymentDemo"))
{
    <div class="container">
        <div class="form-row">
            <div class="form-group">
                <label>Set Quantity for Cart:</label>
                @Html.EditorFor(m => m.PurchaseQuantity,
                new { htmlAttributes = new { @class = "form-control" } })
            </div>
        </div>
        <div class="form-row">
            <div class="form-group">
                <input type="submit" value="Add/Update Cart" class="btn btn-primary" />
            </div>
        </div>
    </div>
}
<h4>Cart Items</h4>
<table class="table">
    <thead>
        <tr>
            <th scope="col">Item Code</th>
            <th scope="col">Quantity</th>
            <th scope="col">Placed Price</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.CartItems)
        {
            <tr>
                <th scope="row">@item.Code</th>
                <td>@item.Quantity</td>
                <td>@item.PlacedPrice</td>
            </tr>
        }
    </tbody>
</table>
<h4>Purchase Simulator</h4>
@using (Html.BeginForm("SimulatePurchase", "PaymentDemo"))
{
    <div class="container">
        <div class="form-row">
            <div class="form-group">
                <label>Select a payment method:</label>
                @Html.DropDownListFor(m => m.SelectedPaymentId,
                    new SelectList(Model.PayMethods, "PaymentMethodId", "Name"),
                    new { @class = "form-control" })
            </div>
        </div>
        <div class="form-row">
            <div class="form-group">
                <input type="submit" value="Purchase" class="btn btn-primary" />
                @if (!String.IsNullOrEmpty(Model.MessageOutput))
                {
                    <label>@Model.MessageOutput</label>
                }
            </div>
        </div>
    </div>
}
